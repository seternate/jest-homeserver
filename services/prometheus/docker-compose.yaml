services:

  # Image specifies healthchecks
  cadvisor:
    image: ghcr.io/google/cadvisor:v0.53.0
    container_name: cadvisor
    labels:
      traefik.enable: true
      traefik.http.routers.cadvisor.middlewares: authentik@docker
      prometheus.scrape: true
      prometheus.port: 8080
    privileged: true
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
    networks:
    - traefik
    - prometheus
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.7.1
    container_name: prometheus
    labels:
      traefik.enable: true
      traefik.http.routers.prometheus.middlewares: authentik@docker
      backup.enable: true
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    user: 0:0
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - ./config:/etc/prometheus:ro
    - ${DATA_FOLDER_PATH:-.}${DATA_FOLDER_PATH:+/prometheus}/data:/prometheus
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
    - traefik
    - prometheus
    restart: unless-stopped

  #No healthcheck possible
  nodeexporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    container_name: nodeexporter
    labels:
      prometheus.scrape: true
      prometheus.address: host.docker.internal
      prometheus.port: 9100
    command:
    - --path.rootfs=/host
    - --collector.textfile.directory=/host${DATA_FOLDER_PATH}/prometheus/nodeexporter
    pid: host
    volumes:
    - /:/host:ro,rslave
    network_mode: host
    restart: unless-stopped

networks:
  prometheus:
