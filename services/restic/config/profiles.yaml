version: "1"

global:
  group-continue-on-error: true
  initialize: true
  log: /log/resticprofile.log
  scheduler: crond

template:
  lock: /tmp/resticprofile-{{ .Profile.Name }}.lock
  prometheus-save-to-file: /prometheus/resticprofile_{{ .Profile.Name}}.prom

  backup:
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    check-after: true
    source:
      - "/{{ .Profile.Name }}"
    host: jest
    group-by: paths
    skip-if-unchanged: true
    ignore-inode: true

  retention:
    after-backup: true
    group-by: paths
    keep-daily: 14
    keep-weekly: 12
    keep-monthly: 6
    keep-yearly: 2
    prune: true

### Local profiles

levin:
  inherit: template
  repository: "local:/levin_backup"
  password-file: "/run/secrets/levin_password"
  backup:
    schedule: "02:00"
levin-check:
  inherit: levin
  backup:
    schedule: ""
  check:
    schedule: "Sun 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data: true

katrin:
  inherit: template
  repository: "local:/katrin_backup"
  password-file: "/run/secrets/katrin_password"
  backup:
    schedule: "02:00"
katrin-check:
  inherit: katrin
  backup:
    schedule: ""
  check:
    schedule: "Sun 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data: true

share:
  inherit: template
  repository: "local:/share_backup"
  password-file: "/run/secrets/share_password"
  backup:
    schedule: "02:00"
share-check:
  inherit: share
  backup:
    schedule: ""
  check:
    schedule: "Sun 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data: true

public:
  inherit: template
  repository: "local:/public_backup"
  password-file: "/run/secrets/public_password"
  backup:
    schedule: "02:00"
public-check:
  inherit: public
  backup:
    schedule: ""
  check:
    schedule: "Sun 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data-subset: 5%

service-data:
  inherit: template
  repository: "local:/service-data_backup"
  password-file: "/run/secrets/service-data_password"
  check:
    read-data: true
  backup:
    schedule: "02:00"
    run-before: |-
      touch /semaphore/{{ .Profile.Name }}
      if [ $(find /semaphore -type f | grep -v {{ .Profile.Name }} | wc -l) -ge 1 ]; then
        echo "Containers already stopped ..."
        exit 0
      fi
      echo "Stop all service containers for backup:"
      docker ps -q --filter "label=backup.enable=true" > /container &&
      docker ps -q --filter "name=bitwarden" >> /container &&
      docker stop $(cat /container)
    run-finally: |-
      if [ $(find /semaphore -type f | grep -v {{ .Profile.Name }} | wc -l) -ge 1 ]; then
        rm /semaphore/{{ .Profile.Name }}
        echo "Another backup is running will not restart containers ..."
        exit 0
      fi
      rm /semaphore/{{ .Profile.Name }}
      echo "Start all service containers stopped for backup:"
      docker start $(cat /container)

service-secrets:
  inherit: template
  repository: "local:/service-secrets_backup"
  password-file: "/run/secrets/service-secrets_password"
  check:
    read-data: true
  backup:
    schedule: "02:00"

## AWS profiles

template-aws:
  inherit: template

  retention:
    after-backup: true
    group-by: paths
    keep-weekly: 12
    keep-monthly: 6
    keep-yearly: 2
    prune: true

levin-aws:
  inherit: template-aws
  repository: "s3:https://s3.eu-central-1.amazonaws.com/jest-backup/levin/"
  password-file: "/run/secrets/levin_password"
  backup:
    schedule: "Wed 02:00"
    source:
    - /levin
levin-check-aws:
  inherit: levin-aws
  backup:
    schedule: ""
  check:
    schedule: "*-*-01 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data-subset: 20%

katrin-aws:
  inherit: template
  repository: "s3:https://s3.eu-central-1.amazonaws.com/jest-backup/katrin/"
  password-file: "/run/secrets/katrin_password"
  backup:
    schedule: "Wed 02:00"
    source:
    - /katrin
katrin-check-aws:
  inherit: katrin-aws
  backup:
    schedule: ""
  check:
    schedule: "*-*-01 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data-subset: 20%

share-aws:
  inherit: template-aws
  repository: "s3:https://s3.eu-central-1.amazonaws.com/jest-backup/share/"
  password-file: "/run/secrets/share_password"
  backup:
    schedule: "Wed 02:00"
    source:
    - /share
share-check-aws:
  inherit: share-aws
  backup:
    schedule: ""
  check:
    schedule: "*-*-01 22:00"
    schedule-permission: system
    schedule-log-wait: 30m
    schedule-log: /log/{{ .Profile.Name }}_backup
    read-data-subset: 20%

service-data-aws:
  inherit: template-aws
  repository: "s3:https://s3.eu-central-1.amazonaws.com/jest-backup/service-data/"
  password-file: "/run/secrets/service-data_password"
  check:
    read-data: true
  backup:
    schedule: "Wed 02:00"
    run-before: |-
      touch /semaphore/{{ .Profile.Name }}
      if [ $(find /semaphore -type f | grep -v {{ .Profile.Name }} | wc -l) -ge 1 ]; then
        echo "Containers already stopped ..."
        exit 0
      fi
      echo "Stop all service containers for backup:"
      docker ps -q --filter "label=backup.enable=true" > /container &&
      docker ps -q --filter "name=bitwarden" >> /container &&
      docker stop $(cat /container)
    run-finally: |-
      if [ $(find /semaphore -type f | grep -v {{ .Profile.Name }} | wc -l) -ge 1 ]; then
        rm /semaphore/{{ .Profile.Name }}
        echo "Another backup is running will not restart containers ..."
        exit 0
      fi
      rm /semaphore/{{ .Profile.Name }}
      echo "Start all service containers stopped for backup:"
      docker start $(cat /container)
    source:
    - /service-data

service-secrets-aws:
  inherit: template-aws
  repository: "s3:https://s3.eu-central-1.amazonaws.com/jest-backup/service-secrets/"
  password-file: "/run/secrets/service-secrets_password"
  check:
    read-data: true
  backup:
    schedule: "Wed 02:00"
    source:
    - /service-secrets
